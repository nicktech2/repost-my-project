import json

# Definir a classe Contato
class Contato:
    def __init__(self, nome, telefone, email):
        self.nome = nome
        self.telefone = telefone
        self.email = email

    def __str__(self):
        return f"{self.nome} - {self.telefone} - {self.email}"

# Função para carregar contatos do arquivo
def carregar_contatos():
    try:
        with open("contatos.json", "r") as f:
            contatos = json.load(f)
        return [Contato(c["nome"], c["telefone"], c["email"]) for c in contatos]
    except (FileNotFoundError, json.JSONDecodeError):
        return []

# Função para salvar contatos no arquivo

def salvar_contatos(contatos):
    with open("contatos.json", "w") as f:

        json.dump([{"nome": c.nome, "telefone": c.telefone, "email": c.email} for c in contatos], f)

# Função para adicionar um novo contato
def adicionar_contato(contatos):

    nome = input("Digite o nome do contato: ")
    telefone = input("Digite o telefone do contato: ")
    email = input("Digite o e-mail do contato: ")
    contatos.append(Contato(nome, telefone, email))
    salvar_contatos(contatos)

    print("Contato adicionado com sucesso!")


# Função para listar os contatos
def listar_contatos(contatos):
    if contatos:
        for i, contato in enumerate(contatos, 1):
            print(f"{i}. {contato}")
    else:
        print("Nenhum contato encontrado.")

# Função para editar um contato

def editar_contato(contatos):
    listar_contatos(contatos)
    try:
        indice = int(input("Digite o número do contato a ser editado: ")) - 1
        if 0 <= indice < len(contatos):
            nome = input("Digite o novo nome: ")
            telefone = input("Digite o novo telefone: ")
            email = input("Digite o novo e-mail: ")
            contatos[indice].nome = nome
            contatos[indice].telefone = telefone
            contatos[indice].email = email
            salvar_contatos(contatos)
            print("Contato editado com sucesso!")
        else:
            print("Contato não encontrado.")
    except ValueError:
        print("Opção inválida.")

# Função para excluir um contato
def excluir_contato(contatos):
    listar_contatos(contatos)
    try:
        indice = int(input("Digite o número do contato a ser excluído: ")) - 1
        if 0 <= indice < len(contatos):
            contatos.pop(indice)
            salvar_contatos(contatos)
            print("Contato excluído com sucesso!")
        else:
            print("Contato não encontrado.")
    except ValueError:
        print("Opção inválida.")

# Função principal
def main():
    contatos = carregar_contatos()

    while True:
        print("\n1. Adicionar Contato")
        print("2. Listar Contatos")
        print("3. Editar Contato")
        print("4. Excluir Contato")
        print("5. Sair")

        escolha = input("Escolha uma opção: ")

        if escolha == "1":
            adicionar_contato(contatos)
        elif escolha == "2":
            listar_contatos(contatos)
        elif escolha == "3":
            editar_contato(contatos)
        elif escolha == "4":
            excluir_contato(contatos)
        elif escolha == "5":
            break
        else:
            print("Opção inválida!")

if __name__ == "__main__":
    main()
